name: Flake Checks
on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:
concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true
jobs:
  flake-check:
    name: Check Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Install Nix
        uses: cachix/install-nix-action@master
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Run Flake Checker
        uses: DeterminateSystems/flake-checker-action@main
        with:
          check-outdated: true
          check-owner: true
          check-supported: true
          fail-mode: true
          ignore-missing-flake-lock: false

      - name: Run Nix Flake Check
        run: |
          set -euo pipefail
          export NIX_CONFIG="extra-experimental-features = nix-command flakes pipe-operators"
          nix flake check --show-trace

  darwin-check:
    name: Check Darwin
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Install Nix
        uses: cachix/install-nix-action@master
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Run Flake Checker
        uses: DeterminateSystems/flake-checker-action@main
        with:
          check-outdated: true
          check-owner: true
          check-supported: true
          fail-mode: true
          ignore-missing-flake-lock: false

      - name: Check Darwin configurations
        run: |
          set -euo pipefail
          export NIX_CONFIG="extra-experimental-features = nix-command flakes pipe-operators"
          configs=(
            anons-Mac-mini
            unsigned-int8
          )
          failed=()
          for config in "${configs[@]}"; do
            echo "Checking Darwin configuration: $config"
            if ! nix run nix-darwin -- check --flake .#"$config"; then
              echo "Configuration $config failed."
              failed+=("$config")
            fi
          done
          if [ "${#failed[@]}" -ne 0 ]; then
            echo "The following configurations failed: ${failed[*]}"
            exit 1
          fi
